# makefile for checking hksc error messages

srcdir=@srcdir@
top_srcdir=@top_srcdir@
top_builddir=@top_builddir@

# @VPATH_SET@

RM=@RM@

HKSC_PREFIX_MAP=@HKSC_PREFIX_MAP@

HKSC_NAME=hksc
EXESUF=@EXESUF@

HKSC=$(top_builddir)/src/$(HKSC_NAME)$(EXESUF)

# -p so that no binaries get generated accidentally
HKSCFLAGS=-p -a $(HKSC_PREFIX_MAP)

# files are generated for each BOM that is NOT accepted by hksc
BOM_TESTS=utf16be_bom.test utf16le_bom.test utf32be_bom.test utf32le_bom.test  \
	utf16or32le_bom.test unknown_bom.test
OTHER_TESTS=badassign.test badbreak.test badlhs.test earlybreak.test  \
	earlyreturn.test literaloverflow.test lud.test utf8_identifier.test
# error checks for when structures are enabled/disabled
NOHSTRUCTURE_TESTS=hmake.test hstructure.test typedparam.test typedvar.test
YESHSTRUCTURE_TESTS=s_badmeta.test s_badmetatype.test s_badproxy.test  \
	s_cons_array.test s_cons_meta.test s_dupmeta.test s_dupslot.test  \
	s_param_type.test s_reserved_slot.test s_slot.test s_slot_type.test  \
	s_slot_ui64.test s_slotlimit.test s_struct_type.test s_structlimit.test  \
	s_unknownstruct.test s_unknowntype.test s_var_type.test

NOUI64_TESTS=
YESUI64_TESTS=ui64.test

STANDARD_TESTS= $(OTHER_TESTS) $(BOM_TESTS)

ALL_ERROR_TESTS=$(STANDARD_TESTS) $(YESHSTRUCTURE_TESTS)  \
	$(@WITH_STRUCTURES@HSTRUCTURE_TESTS) $(YESUI64_TESTS) $(NOUI64_TESTS)

# HSTRUCTURE_ERROR_CHECK=@HSTRUCTURE_ERROR_CHECK@

all: prepare $(STANDARD_TESTS) @UI64_ERROR_CHECK@ @HSTRUCTURE_ERROR_CHECK@
	@printf -- '----------------------------\nAll Lua error checks passed\n\n'

prepare: clean checkexpect
	@printf '\nStarting Lua error checks...\n----------------------------\n'

checkexpect:
	@if test ! -e expect.sum; then \
		echo You need to generate expect.sum; \
		exit 1; \
	fi
	@shasum -a1 -c expect.sum >/dev/null

expect:
	@if test ! -e $(GEN_EXPECT) || test ! -x $(GEN_EXPECT); then \
		echo "Nothing to do: $(GEN_EXPECT) not found"; \
		exit 1; \
	fi
	HKSCFLAGS='$(HKSCFLAGS)' $(GEN_EXPECT) --srcdir='$(srcdir)' \
	--hksc='$(HKSC)' --expect-error --literaloverflowtest-flags=-L

expectsum:
	@files= ; \
	for f in *.expect; do \
		files="$$files $(srcdir)/$${f%.expect}.lua"; \
	done; \
	shasum -a1 -U $$files > expect.sum

nohstructure: $(NOHSTRUCTURE_TESTS)

yeshstructure: $(YESHSTRUCTURE_TESTS)

noui64: $(NOUI64_TESTS)

yesui64: $(YESUI64_TESTS)

.SUFFIXES:
.SUFFIXES: .expect .test

.expect.test:
	@EXTRAFLAGS= ; test "x$@" = "xliteraloverflow.test" && EXTRAFLAGS=-L; \
	if $(HKSC) $(HKSCFLAGS) $$EXTRAFLAGS $(srcdir)/$*.lua >/dev/null 2>$@; \
	then echo "$*.lua error check failed (no error was raised)"; exit 1; \
	else \
		if diff -u --strip-trailing-cr $< $@; then echo "$*.lua error check OK"; \
		else echo "$*.lua error check failed (output differs from expected)"; \
			exit 1; \
		fi; \
	fi

Makefile: $(srcdir)/Makefile.in $(top_srcdir)/configure
	@echo regenerating test/error/$@
	@cd $(top_builddir) && @CONFIGURE@ > /dev/null

clean:
	-@$(RM) *.test

.PHONY: all prepare clean checkexpect expectsum nohstructure yeshstructure

# (end of Makefile)
