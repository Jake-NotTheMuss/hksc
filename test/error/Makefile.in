# makefile for checking hksc error messages

srcdir=@srcdir@
top_srcdir=@top_srcdir@
top_builddir=@top_builddir@

# @VPATH_SET@

RM=@RM@

HKSC_SUPPRESS_LOGGING=@HKSC_SUPPRESS_LOGGING@
HKSC_PREFIX_MAP=@HKSC_PREFIX_MAP@

HKSC=$(top_builddir)/src/$(HKSC_NAME)

# -p so that no binaries get generated accidentally
HKSCFLAGS=-p --compile $(HKSC_SUPPRESS_LOGGING) $(HKSC_PREFIX_MAP)

# files are generated for each BOM that is NOT accepted by hksc
BOM_TESTS=utf16be_bom.test utf16le_bom.test utf32be_bom.test utf32le_bom.test  \
utf16or32le_bom.test unknown_bom.test
OTHER_TESTS=badassign.test badbreak.test earlybreak.test earlyreturn.test  \
literaloverflow.test lud.test ui64.test #utf8_identifier.test
# error checks for when structures are enabled/disabled
NOHSTRUCTURE_TESTS=hmake.test hstructure.test typedparam.test typedvar.test
YESHSTRUCTURE_TESTS=

STANDARD_TESTS= $(OTHER_TESTS) $(BOM_TESTS)

ALL_ERROR_TESTS=$(STANDARD_TESTS) $(YESHSTRUCTURE_TESTS) $(NOHSTRUCTURE_TESTS)

# HSTRUCTURE_ERROR_CHECK=@HSTRUCTURE_ERROR_CHECK@

all:prepare $(STANDARD_TESTS) $(HSTRUCTURE_ERROR_CHECK)
	@printf -- '----------------------------\nAll Lua error checks passed\n\n'

prepare: clean checkexpect
	@printf '\nStarting Lua error checks...\n----------------------------\n'

checkexpect:
	@if test ! -e expect.sum; then \
		echo You need to generate expect.sum; \
		exit 1; \
	fi
	@shasum -c expect.sum >/dev/null

expectsum:
	@files= ; \
	for f in *.expect; do \
		files="$$files $(srcdir)/$${f%.expect}.lua"; \
	done; \
	shasum -U $$files > expect.sum

nohstructure: $(NOHSTRUCTURE_TESTS)

yeshstructure: $(YESHSTRUCTURE_TESTS)

.SUFFIXES:
.SUFFIXES: .expect .test

.expect.test:
	@EXTRAFLAGS= ; test "x$@" = "xliteraloverflow.test" && EXTRAFLAGS=-L; \
	if $(HKSC) $(HKSCFLAGS) $$EXTRAFLAGS $(srcdir)/$*.lua >/dev/null 2>$@; \
	then echo "$*.lua error check failed (no error was raised)"; exit 1; \
	else \
		if diff -u $< $@; then echo "$*.lua error check OK"; \
		else echo "$*.lua error check failed (output differs from expected)"; \
			exit 1; \
		fi; \
	fi

Makefile: $(srcdir)/Makefile.in $(top_srcdir)/configure
	@echo regenerating test/error/$@
	@cd $(top_builddir) && @CONFIGURE@ > /dev/null

clean:
	-@$(RM) *.test

.PHONY: all prepare clean checkexpect expectsum nohstructure yeshstructure

# (end of Makefile)
