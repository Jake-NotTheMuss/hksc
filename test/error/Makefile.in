# makefile for checking hksc error messages

srcdir=@srcdir@
top_srcdir=@top_srcdir@
top_builddir=@top_builddir@

# @VPATH_SET@

RM=@RM@

HKSC_PREFIX_MAP=@HKSC_PREFIX_MAP@

HKSC_NAME=hksc
EXESUF=@EXESUF@

HKSC=$(top_builddir)/src/$(HKSC_NAME)$(EXESUF)

# -p so that no binaries get generated accidentally
HKSCFLAGS=--testing --test-srcdir='$(srcdir)' --expect-error -a $(HKSC_PREFIX_MAP)

BOM_SRC=utf16be_bom.lua utf16le_bom.lua utf32be_bom.lua utf32le_bom.lua  \
	utf16or32le_bom.lua unknown_bom.lua
OTHER_SRC=badassign.lua badbreak.lua badlhs.lua earlybreak.lua  \
	earlyreturn.lua lud.lua utf8_identifier.lua

LITERAL_SRC=literaloverflow.lua

# when HKSC_STRUCTURE_EXTENSION_ON == 0
NOSTRUCT_SRC=hmake.lua hstructure.lua typedparam.lua typedvar.lua
# when HKSC_STRUCTURE_EXTENSION_ON != 0
STRUCT_SRC=s_badmeta.lua s_badmetatype.lua s_badproxy.lua  \
	s_cons_array.lua s_cons_meta.lua s_dupmeta.lua s_dupslot.lua  \
	s_param_type.lua s_reserved_slot.lua s_slot.lua s_slot_type.lua  \
	s_slot_ui64.lua s_slotlimit.lua s_struct_type.lua s_structlimit.lua  \
	s_unknownstruct.lua s_unknowntype.lua s_var_type.lua

NOUI64_SRC=
UI64_SRC=ui64.lua

STANDARD_TESTS= $(OTHER_SRC) $(BOM_SRC)

ALL_ERROR_TESTS=$(STANDARD_TESTS) $(@STRUCT_ERROR_SRC@) $(@UI64_ERROR_SRC@)

all: prepare tests literaltests
	@printf -- '----------------------------\nAll Lua error checks passed\n\n'

prepare: clean checkexpect
	@printf '\nStarting Lua error checks...\n----------------------------\n'

checkexpect:
	@if test ! -e expect.sum; then \
		echo You need to generate expect.sum; \
		exit 1; \
	fi
	@shasum -a1 -c expect.sum >/dev/null

expect:
	@if test ! -e $(GEN_EXPECT) || test ! -x $(GEN_EXPECT); then \
		echo "Nothing to do: $(GEN_EXPECT) not found"; \
		exit 1; \
	fi
	HKSCFLAGS='$(HKSCFLAGS)' $(GEN_EXPECT) --srcdir='$(srcdir)' \
	--hksc='$(HKSC)' --expect-error --literaloverflowtest-flags=-L

expectsum:
	@files= ; \
	for f in *.expect; do \
		files="$$files $(srcdir)/$${f%.expect}.lua"; \
	done; \
	shasum -a1 -U $$files > expect.sum

tests:
	@$(HKSC) $(HKSCFLAGS) $(ALL_ERROR_TESTS)

literaltests:
	@$(HKSC) $(HKSCFLAGS) -L $(LITERAL_SRC)

Makefile: $(srcdir)/Makefile.in $(top_srcdir)/configure
	@echo regenerating test/error/$@
	@cd $(top_builddir) && @CONFIGURE@ > /dev/null

clean:
	-@$(RM) *.test

.PHONY: all prepare clean checkexpect expectsum tests literaltests

# (end of Makefile)
