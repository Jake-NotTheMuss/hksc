# makefile for testing Lua

TOP=..

include $(TOP)/config.mak

# should be set by the parent Makefile in the invokation
HKSC=echo you need to set HKSC in the parent Makefile; false \#

# TESTS=version
TESTS= $(COMPILER_TESTS) $(DECOMPILER_TESTS)

TESTMAKEFLAGS=

# set by condigure
GAMEDIR=

# no need to list 2 games that have the same compatibility settings, i.e., if
# game X and game Y both have the same compatilbility settings, only use game X
# for tests; the one exception to this is Call of Duty, which has all features
# disabled for T6 and T7, but T7 generates different code than T6 because it has
# additional opcodes for bitwise operations
ALL_GAMEDIRS=codt6 codt7

# will be set to .dtest by configure if the decompiler is enabled
# *.dtest will depend on *.ctest, so compiler tests will always be run, and then
# if the decompiler is enabled, the decompiler tests will be run
TESTSUFFIX=.ctest

# set to all test targets when self-recursing
ALL_TESTS=

test:
	@$(MAKE) -s clean
	@tests= ; \
	for f in [0-9][0-9]_*.lua; do \
	tests="$$tests $${f%.lua}$(TESTSUFFIX)"; \
	done; \
	$(MAKE) $(TESTMAKEFLAGS) all ALL_TESTS="$$tests"

all: dummy version error $(ALL_TESTS)

# for when $(TESTS) is empty
# also checks that HKSC was set properly
dummy:
	@$(HKSC) --version >/dev/null 2>&1

# check version of $(HKSC) against expected version
version:
	@echo checking \`$(HKSC) --version\` against $(HKSC_VERSION); \
	HKSC_VERSION_REGEX=`echo $(HKSC_VERSION) | sed 's/\./\\./g'`; \
	$(HKSC) --version | grep -iq ".*hksc[^0-9]*$$HKSC_VERSION_REGEX"

error:
	@cd $@ && $(MAKE) $(TESTMAKEFLAGS) HKSC=../$(HKSC)

.SUFFIXES: .lua .luac .cexpect .ctest .dtest

# .lua.luac:
# 	$(HKSC) --compile -s $< -o $@

.lua.cexpect:
	@echo You need to regenerate $@!; false

# compiler test
.cexpect.ctest:
	@echo hello $@

# decompiler test
.ctest.dtest:
	@echo hello $@

clean:
	$(RM) *.luac *.luadebug *.luacallstackdb *.ctest *.dtest

.PHONY: test all dummy clean version error

05_bigtable.lua: gen-bigtable.sh
	$(SHELL) $< $@

# (end of Makefile)
