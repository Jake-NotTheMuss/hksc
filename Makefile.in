# developer makefile for building and testing Lua
# see src/Makefile and src/luaconf.h for further customization

# == CHANGE THE SETTINGS BELOW TO SUIT YOUR ENVIRONMENT =======================

# Your platform. See PLATS for possible values.
PLAT= none

# Where to install. The installation starts in the src directory, so take care
# if INSTALL_TOP is not an absolute path. (Man pages are installed from the
# doc directory.)
#
INSTALL_TOP= $(prefix)
INSTALL_BIN= $(INSTALL_TOP)/bin
INSTALL_INC= $(INSTALL_TOP)/include
INSTALL_LIB= $(INSTALL_TOP)/lib
INSTALL_MAN= $(INSTALL_TOP)/man/man1

# How to install. You may prefer "install" instead of "cp" if you have it.
# To remove debug information from binaries, use "install -s" in INSTALL_EXEC.
#
INSTALL_EXEC= $(CP)
INSTALL_DATA= $(CP)
#INSTALL_EXEC= $(INSTALL) -m 0755
#INSTALL_DATA= $(INSTALL) -m 0644

# Utilities.
CP= cp
RM= rm -f
FIND= find
INSTALL= install
MKDIR= mkdir
RANLIB= ranlib

# == END OF USER SETTINGS. NO NEED TO CHANGE ANYTHING BELOW THIS LINE =========

# files generated by configure
CONFIGMAKEFILES=Makefile test/Makefile $(SRCDIR)/Makefile
CONFIGHEADERS=$(SRCDIR)/hkscconf.h
CONFIGFILES=$(CONFIGMAKEFILES) $(CONFIGHEADERS)

CONFIGUREFLAGS=

prefix=/usr/local

SHAREDLIB=libhksc.so

SRCDIR=src
DOCDIR=doc

# What to install.
TO_BIN= $(SRCDIR)/hksc
TO_INC= $(SRCDIR)/hksclua.h $(SRCDIR)/hkscluaconf.h $(SRCDIR)/hksclib.h  \
	$(SRCDIR)/hkscconf.h
TO_LIB= $(SRCDIR)/libhksc.a $(SRCDIR)/$(SHAREDLIB)
# TO_MAN= lua.1 luac.1

INSTALL_EXEC="cp -p"
INSTALL_DATA="cp -p"

# set prefix for the child Makefile to use with `rpath'
all: $(SRCDIR)

test: test/Makefile $(SRCDIR)
	@cd test && \
	$(MAKE) test HKSC=../$(SRCDIR)/hksc && \
	$(MAKE) test HKSC=../$(SRCDIR)/hkscsh

$(SRCDIR): $(SRCDIR)/Makefile $(SRCDIR)/hkscconf.h
	@cd $(SRCDIR) && $(MAKE) prefix=$(prefix)

clean depend:
	@cd $(SRCDIR) && $(MAKE) $@

distclean: clean
	$(RM) $(CONFIGFILES) config.status config.log

install:
	$(MKDIR) -p $(INSTALL_BIN) $(INSTALL_INC) $(INSTALL_LIB) $(INSTALL_MAN)
	$(INSTALL_EXEC) $(TO_BIN) $(INSTALL_BIN)
	$(INSTALL_DATA) $(TO_INC) $(INSTALL_INC)
	$(INSTALL_DATA) $(TO_LIB) $(INSTALL_LIB)
	$(INSTALL_DATA) $(TO_MAN) $(INSTALL_MAN)
#	$(RANLIB) $(INSTALL_LIB)/$(TO_LIB)

local:
	$(MAKE) install INSTALL_TOP=. INSTALL_EXEC="cp -p" INSTALL_DATA="cp -p"

# echo config parameters
echo:
	@echo ""
	@echo "These are the parameters currently set in src/Makefile to build Lua:"
	@echo ""
	@cd $(SRCDIR) && $(MAKE) -s echo
	@echo ""
	@echo "These are the parameters currently set in Makefile to install Lua:"
	@echo ""
	@echo "prefix = $(prefix)"
	@echo "SHAREDLIB = $(SHAREDLIB)"
	@echo "PLAT = $(PLAT)"
	@echo "INSTALL_TOP = $(INSTALL_TOP)"
	@echo "INSTALL_BIN = $(INSTALL_BIN)"
	@echo "INSTALL_INC = $(INSTALL_INC)"
	@echo "INSTALL_LIB = $(INSTALL_LIB)"
	@echo "INSTALL_MAN = $(INSTALL_MAN)"
	@echo "INSTALL_LMOD = $(INSTALL_LMOD)"
	@echo "INSTALL_CMOD = $(INSTALL_CMOD)"
	@echo "INSTALL_EXEC = $(INSTALL_EXEC)"
	@echo "INSTALL_DATA = $(INSTALL_DATA)"
	@echo ""
	@echo "See also src/luaconf.h ."
	@echo ""

# echo private config parameters
pecho:
	@echo "TO_BIN = $(TO_BIN)"
	@echo "TO_INC = $(TO_INC)"
	@echo "TO_LIB = $(TO_LIB)"
	@echo "TO_MAN = $(TO_MAN)"

# show what has changed since we unpacked
newer:
	@$(FIND) . -newer MANIFEST -type f

Makefile: Makefile.in
test/Makefile: test/Makefile.in
$(SRCDIR)/Makefile: $(SRCDIR)/Makefile.in
$(SRCDIR)/hkscconf.h: $(SRCDIR)/hkscconf.h.in

# add this option when calling configure just to update a Makefile; it prevents
# configure from regenerating other files that would cause a complete rebuild
$(CONFIGMAKEFILES): CONFIGUREFLAGS=--makefile=$@

$(CONFIGFILES): configure config.status
	@echo rebuilding $@
	./configure $(CONFIGUREFLAGS)

# list targets that do not create files (but not all makes understand .PHONY)
.PHONY: all $(SRCDIR) test clean distclean install local echo pecho lecho newer

# (end of Makefile)
